const alpha: Int = 255<24;

class RayTracer {
    var scene: Scence;
    var lights: Array[Light];
    var prim: Array[Primitive];
    var view: View;
    var tRay: Ray;
    var L: Vec3;
    var inter: Isect;
    var height: Int;
    var width: Int;
    var datasizes: Array[Int];
    var checksum: Long;
    var size: Int;
    var numobjects: Int;
    
    fun createScene(): Scene {

    }

    fun setScene(scene: Scene) {

    }

    fun render(interval: Interval) {

    }

    fun intersect(r: Ray, maxt: Float64): Bool {

    }

    fun Shadow(r: Ray, tmax: Float64): Int {

    }

    fun SpecularDirection(i: Vec3, n: Vec3): Vec3 {

    }

    fun shade(level: Int, weight: Float64, p: Vec3, n: Vec3, i: Vec3, hit: Isect) {

    }

    fun trace(level: Int, weight: Float64, r: Ray) {
        
    }
}