fun main() {
    assert("x${f[Bar]()}y${f[Baz]()}z" == "xBAR1yBAZ2z");
}

trait X {
    @static fun foo(): Self;
}

fun f[T: X + Stringable](): String {
    return T::foo().toString();
}

class Bar(let x: Int32)

impl Stringable for Bar {
    fun toString(): String {
        return "BAR${self.x}";
    }
}

impl X for Bar {
    @static fun foo(): Bar {
        return Bar(1);
    }
}

class Baz(let x: Int32)

impl Stringable for Baz {
    fun toString(): String {
        return "BAZ${self.x}";
    }
}

impl X for Baz {
    @static fun foo(): Baz {
        return Baz(2);
    }
}