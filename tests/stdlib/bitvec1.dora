fn main() {
    let set = std::BitVec::new();
    set.insert(0);
    set.insert(63);
    assert(set.contains(0));
    assert(set.contains(63));

    let mut i = 1i32;
    while i < 63i32 {
        assert(!set.contains(i.toInt64()));
        i = i + 1i32;
    }

    assert(set.capacity() == 64);
    assert(!set.contains(64));
    assert(!set.contains(128));

    set.insert(0);
    set.insert(1);
    set.insert(31);
    set.insert(32);
    set.insert(63);

    assert(set.contains(0));
    assert(set.contains(1));
    assert(!set.contains(2));
    assert(!set.contains(30));
    assert(set.contains(31));
    assert(set.contains(32));
    assert(!set.contains(33));
    assert(!set.contains(62));
    assert(set.contains(63));

    set.remove(0);
    set.remove(63);

    assert(!set.contains(0));
    assert(set.contains(1));
    assert(set.contains(31));
    assert(set.contains(32));
    assert(!set.contains(63));
    assert(!set.contains(64));
    assert(!set.contains(128));
    assert(set.capacity() == 64);

    set.insert(64);
    assert(set.capacity() == 96);
}
