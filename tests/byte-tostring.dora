fun main() {
  let x = UInt8::minValue().toStringBinary();
  assert(x == "0");

  let x = UInt8::maxValue().toStringBinary();
  assert(x == "11111111");

  let x = 12I.toUInt8().toStringBinary();
  assert(x == "1100");

  let x = 67I.toUInt8().toStringBinary();
  assert(x == "1000011");

  let x = 129I.toUInt8().toStringBinary();
  assert(x == "10000001");

  let x = (-1I).toUInt8().toStringBinary();
  assert(x == "11111111");

  let x = (-129I).toUInt8().toStringBinary();
  assert(x == "1111111");


  let x = UInt8::minValue().toStringHex();
  assert(x == "0");

  let x = UInt8::maxValue().toStringHex();
  assert(x == "FF");

  let x = 12I.toUInt8().toStringHex();
  assert(x == "C");

  let x = 67I.toUInt8().toStringHex();
  assert(x == "43");

  let x = 129I.toUInt8().toStringHex();
  assert(x == "81");

  let x = (-1I).toUInt8().toStringHex();
  assert(x == "FF");

  let x = (-129I).toUInt8().toStringHex();
  assert(x == "7F");
}
