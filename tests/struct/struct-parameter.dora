fun main() {
    assert(3I == tpl1(Foo(1I, 2I), 4711I));
    assert(6I == tpl2(1I, Foo(2I, 3I), 4711I));
    assert(10I == tpl3(1I, 2I, Foo(3I, 4I), 4711I));
    assert(15I == tpl4(1I, 2I, 3I, Foo(4I, 5I), 4711I));
    assert(21I == tpl5(1I, 2I, 3I, 4I, Foo(5I, 6I), 4711I));
    assert(28I == tpl6(1I, 2I, 3I, 4I, 5I, Foo(6I, 7I), 4711I));
    assert(36I == tpl7(1I, 2I, 3I, 4I, 5I, 6I, Foo(7I, 8I), 4711I));
    assert(45I == tpl8(1I, 2I, 3I, 4I, 5I, 6I, 7I, Foo(8I, 9I), 4711I));
}

struct Foo(first: Int32, second: Int32)

fun tpl1(x: Foo, control: Int32): Int32 {
    assert(control == 4711I);
    x.first + x.second
}

fun tpl2(a0: Int32, x: Foo, control: Int32): Int32 {
    assert(control == 4711I);
    a0 + x.first + x.second
}

fun tpl3(a0: Int32, a1: Int32, x: Foo, control: Int32): Int32 {
    assert(control == 4711I);
    a0 + a1 + x.first + x.second
}

fun tpl4(a0: Int32, a1: Int32, a2: Int32, x: Foo, control: Int32): Int32 {
    assert(control == 4711I);
    a0 + a1 + a2 + x.first + x.second
}

fun tpl5(a0: Int32, a1: Int32, a2: Int32, a3: Int32, x: Foo, control: Int32): Int32 {
    assert(control == 4711I);
    a0 + a1 + a2 + a3 + x.first + x.second
}

fun tpl6(a0: Int32, a1: Int32, a2: Int32, a3: Int32, a4: Int32, x: Foo, control: Int32): Int32 {
    assert(control == 4711I);
    a0 + a1 + a2 + a3 + a4 + x.first + x.second
}

fun tpl7(a0: Int32, a1: Int32, a2: Int32, a3: Int32, a4: Int32, a5: Int32, x: Foo, control: Int32): Int32 {
    assert(control == 4711I);
    a0 + a1 + a2 + a3 + a4 + a5 + x.first + x.second
}

fun tpl8(a0: Int32, a1: Int32, a2: Int32, a3: Int32, a4: Int32, a5: Int32, a6: Int32, x: Foo, control: Int32): Int32 {
    assert(control == 4711I);
    a0 + a1 + a2 + a3 + a4 + a5 + a6 + x.first + x.second
}
