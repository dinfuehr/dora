fn main() {
    assert(eq[Int64](10, 10));
    assert(!eq[Int64](10, 12));

    assert(eq[Int32](10i32, 10i32));
    assert(!eq[Int32](10i32, 12i32));

    assert(eq[Wrapper](Wrapper(10), Wrapper(10)));
    assert(!eq[Wrapper](Wrapper(10), Wrapper(12)));

    assert(eq[Float64](10.0f64, 10.0f64));
    assert(!eq[Float64](10.0f64, 12.0f64));

    assert(eq[Float32](10.0f32, 10.0f32));
    assert(!eq[Float32](10.0f32, 12.0f32));
}

fn eq[T: std::traits::Equals](lhs: T, rhs: T): Bool {
    lhs == rhs
}

struct Wrapper(Int64)

impl std::traits::Equals for Wrapper {
    fn equals(rhs: Wrapper): Bool {
        self.0 == rhs.0
    }
}
