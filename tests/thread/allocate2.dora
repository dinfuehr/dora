//= vm-args "--gc-young-size=64M --max-heap-size=128M"

fn main() {
    let mut i = 0i32;

    while i < 4i32 {
        std::thread::spawn(|| {
            allocator();
            println("done");
        });
        i = i + 1i32;
    }

    allocator();
    println("done");
}

fn allocator() {
    let mut i = 1i32;
    let mut list = Foo(key = 0i32, prev = None[Foo]);

    while i < 10_000i32 {
        list = Foo(key = i, prev = Some[Foo](list));
        i = i + 1i32;
    }

    i = 10_000i32;

    while i > 1i32 {
        i = i - 1i32;
        assert(list.key == i);
        list = list.prev.getOrPanic();
    }

    assert(list.prev.isNone());
}

class Foo {
    key: Int32, prev: Option[Foo]
}
