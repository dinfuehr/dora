class Foo { a: Int64, b: Int64, c: Int64 }

fn main() {
    assert(fst(Foo(a=1, b=3, c=7)) == 1);
    assert(mid(Foo(a=1, b=3, c=7)) == 3);
    assert(lst(Foo(a=1, b=3, c=7)) == 7);

    assert(fst(Foo(a=7, b=4, c=1)) == 7);
    assert(mid(Foo(a=7, b=4, c=1)) == 4);
    assert(lst(Foo(a=7, b=4, c=1)) == 1);
}

fn fst(x: Foo): Int64 {
    let Foo(a, ..) = x;
    a
}

fn mid(x: Foo): Int64 {
    let Foo(.., a, _) = x;
    a
}

fn lst(x: Foo): Int64 {
    let Foo(.., a) = x;
    a
}
