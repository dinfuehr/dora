fn main() {
    let x = |a: Int64, b: Int64|: Int64 { a + b };
    assert(x.f() == 3);
    assert(x.g() == 7);

    let x = |a: Int64, b: Int64|: Int64 { a * b };
    assert(x.f() == 2);
    assert(x.g() == 12);
}

trait Foo {
    fn f(): Int64;
    fn g(): Int64;
}

impl Foo for (Int64, Int64): Int64 {
    fn f(): Int64 {
        self(1, 2)
    }

    fn g(): Int64 {
        self(3, 4)
    }
}
