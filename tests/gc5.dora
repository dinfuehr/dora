fun main() {
  let a = nested();
  std::forceCollect();

  assert(a.next.getOrPanic().next.getOrPanic().value == 3I);
}

fun nested(): Foo {
  let x = Foo(3I, None[Foo]);
  let y = Foo(2I, Some[Foo](x));
  let z = Foo(1I, Some[Foo](y));

  return z;
}

class Foo(let value: Int32, let next: Option[Foo])
