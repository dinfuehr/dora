fun main() {
    assert(mysum1(Vec[Int32]()) == 0I);
    assert(mysum1(Vec[Int32](1I)) == 1I);
    assert(mysum1(Vec[Int32](1I, 2I, 3I, 4I, 5I)) == 15I);

    assert(mysum2(Vec[Float32]()) == 0.0F);
    assert(mysum2(Vec[Float32](1.0F)) == 1.0F);
    assert(mysum2(Vec[Float32](1.0F, 2.0F, 3.0F, 4.0F, 5.0F)) == 15.0F);
}

fun mysum1(x: Vec[Int32]): Int32 {
    var entries = 0I;
    for val in x.makeIterator() {
        entries = entries + val;
    }
    entries
}

fun mysum2(x: Vec[Float32]): Float32 {
    var entries = 0.0F;
    for val in x.makeReverseIterator() {
        entries = entries + val;
    }
    entries
}
