fn main() {
    let cx = CX(0, 10);
    let mut sum = 0;
    let mut idx = 0;
    for el in cx {
        assert(el == idx);
        sum = sum + el;
        idx = idx + 1;
    }
    assert(idx == 10);
    assert(sum == 45);
}

class CX(current: Int64, limit: Int64)

impl std::traits::Iterator for CX {
    type Item = Int64;
    fn next(): Option[Int64] {
        if self.current < self.limit {
            let result = self.current;
            self.current = self.current + 1;
            Some[Int64](result)
        } else {
            None[Int64]
        }
    }
}
