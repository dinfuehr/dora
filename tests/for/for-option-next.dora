class SomeIterator {
    start: Int64,
    end: Int64,
    current: Int64,
}

impl SomeIterator {
    static fn new(start: Int64, end: Int64): SomeIterator {
        SomeIterator(start, end, start)
    }

    fn next(): Option[Int64] {
        if self.current < self.end {
            let result = self.current;
            self.current = self.current + 1;
            Some[Int64](result)
        } else {
            None[Int64]
        }
    } 
}

fn main() {
    let mut sum = 0;
    let iterator = SomeIterator::new(0, 10);

    for value in iterator {
        sum = sum + value;
    }

    assert(sum == 45)
}
