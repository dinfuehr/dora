//= vm-args "--gc-parallel-minor --gc-worker=2 --gc-verify"

fun main() {
    var x = Foo(Option[Foo]::None);
    var i = 0I;

    while i < 100I {
        x = Foo(Option[Foo]::Some(x));
        Foo(Option[Foo]::Some(x));
        i = i + 1I;
    }

    std::forceMinorCollect();
    assert(x.next.getOrPanic().next.isSome());

    i = 0I;

    while i < 100I {
        x = Foo(Option[Foo]::Some(x));
        Foo(Option[Foo]::Some(x));
        i = i + 1I;
    }

    std::forceMinorCollect();
    assert(x.next.getOrPanic().next.isSome());
    std::forceMinorCollect();
    assert(x.next.getOrPanic().next.isSome());
}

class Foo(let next: Option[Foo])