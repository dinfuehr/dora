//= vm-args "--gc=swiper --gc-verify"

fn main() {
    let x = LargeObject::new();
    x.val1 = 1i64;
    x.val512 = 512i64;
    std::forceMinorCollect();
    std::forceMinorCollect();
    assert(x.val1 + x.val512 == 513i64);
}

class LargeObject {
   val1: Int64,
   val2: Int64,
   val3: Int64,
   val4: Int64,
   val5: Int64,
   val6: Int64,
   val7: Int64,
   val8: Int64,
   val9: Int64,
   val10: Int64,
   val11: Int64,
   val12: Int64,
   val13: Int64,
   val14: Int64,
   val15: Int64,
   val16: Int64,
   val17: Int64,
   val18: Int64,
   val19: Int64,
   val20: Int64,
   val21: Int64,
   val22: Int64,
   val23: Int64,
   val24: Int64,
   val25: Int64,
   val26: Int64,
   val27: Int64,
   val28: Int64,
   val29: Int64,
   val30: Int64,
   val31: Int64,
   val32: Int64,
   val33: Int64,
   val34: Int64,
   val35: Int64,
   val36: Int64,
   val37: Int64,
   val38: Int64,
   val39: Int64,
   val40: Int64,
   val41: Int64,
   val42: Int64,
   val43: Int64,
   val44: Int64,
   val45: Int64,
   val46: Int64,
   val47: Int64,
   val48: Int64,
   val49: Int64,
   val50: Int64,
   val51: Int64,
   val52: Int64,
   val53: Int64,
   val54: Int64,
   val55: Int64,
   val56: Int64,
   val57: Int64,
   val58: Int64,
   val59: Int64,
   val60: Int64,
   val61: Int64,
   val62: Int64,
   val63: Int64,
   val64: Int64,
   val65: Int64,
   val66: Int64,
   val67: Int64,
   val68: Int64,
   val69: Int64,
   val70: Int64,
   val71: Int64,
   val72: Int64,
   val73: Int64,
   val74: Int64,
   val75: Int64,
   val76: Int64,
   val77: Int64,
   val78: Int64,
   val79: Int64,
   val80: Int64,
   val81: Int64,
   val82: Int64,
   val83: Int64,
   val84: Int64,
   val85: Int64,
   val86: Int64,
   val87: Int64,
   val88: Int64,
   val89: Int64,
   val90: Int64,
   val91: Int64,
   val92: Int64,
   val93: Int64,
   val94: Int64,
   val95: Int64,
   val96: Int64,
   val97: Int64,
   val98: Int64,
   val99: Int64,
   val100: Int64,
   val101: Int64,
   val102: Int64,
   val103: Int64,
   val104: Int64,
   val105: Int64,
   val106: Int64,
   val107: Int64,
   val108: Int64,
   val109: Int64,
   val110: Int64,
   val111: Int64,
   val112: Int64,
   val113: Int64,
   val114: Int64,
   val115: Int64,
   val116: Int64,
   val117: Int64,
   val118: Int64,
   val119: Int64,
   val120: Int64,
   val121: Int64,
   val122: Int64,
   val123: Int64,
   val124: Int64,
   val125: Int64,
   val126: Int64,
   val127: Int64,
   val128: Int64,
   val129: Int64,
   val130: Int64,
   val131: Int64,
   val132: Int64,
   val133: Int64,
   val134: Int64,
   val135: Int64,
   val136: Int64,
   val137: Int64,
   val138: Int64,
   val139: Int64,
   val140: Int64,
   val141: Int64,
   val142: Int64,
   val143: Int64,
   val144: Int64,
   val145: Int64,
   val146: Int64,
   val147: Int64,
   val148: Int64,
   val149: Int64,
   val150: Int64,
   val151: Int64,
   val152: Int64,
   val153: Int64,
   val154: Int64,
   val155: Int64,
   val156: Int64,
   val157: Int64,
   val158: Int64,
   val159: Int64,
   val160: Int64,
   val161: Int64,
   val162: Int64,
   val163: Int64,
   val164: Int64,
   val165: Int64,
   val166: Int64,
   val167: Int64,
   val168: Int64,
   val169: Int64,
   val170: Int64,
   val171: Int64,
   val172: Int64,
   val173: Int64,
   val174: Int64,
   val175: Int64,
   val176: Int64,
   val177: Int64,
   val178: Int64,
   val179: Int64,
   val180: Int64,
   val181: Int64,
   val182: Int64,
   val183: Int64,
   val184: Int64,
   val185: Int64,
   val186: Int64,
   val187: Int64,
   val188: Int64,
   val189: Int64,
   val190: Int64,
   val191: Int64,
   val192: Int64,
   val193: Int64,
   val194: Int64,
   val195: Int64,
   val196: Int64,
   val197: Int64,
   val198: Int64,
   val199: Int64,
   val200: Int64,
   val201: Int64,
   val202: Int64,
   val203: Int64,
   val204: Int64,
   val205: Int64,
   val206: Int64,
   val207: Int64,
   val208: Int64,
   val209: Int64,
   val210: Int64,
   val211: Int64,
   val212: Int64,
   val213: Int64,
   val214: Int64,
   val215: Int64,
   val216: Int64,
   val217: Int64,
   val218: Int64,
   val219: Int64,
   val220: Int64,
   val221: Int64,
   val222: Int64,
   val223: Int64,
   val224: Int64,
   val225: Int64,
   val226: Int64,
   val227: Int64,
   val228: Int64,
   val229: Int64,
   val230: Int64,
   val231: Int64,
   val232: Int64,
   val233: Int64,
   val234: Int64,
   val235: Int64,
   val236: Int64,
   val237: Int64,
   val238: Int64,
   val239: Int64,
   val240: Int64,
   val241: Int64,
   val242: Int64,
   val243: Int64,
   val244: Int64,
   val245: Int64,
   val246: Int64,
   val247: Int64,
   val248: Int64,
   val249: Int64,
   val250: Int64,
   val251: Int64,
   val252: Int64,
   val253: Int64,
   val254: Int64,
   val255: Int64,
   val256: Int64,
   val257: Int64,
   val258: Int64,
   val259: Int64,
   val260: Int64,
   val261: Int64,
   val262: Int64,
   val263: Int64,
   val264: Int64,
   val265: Int64,
   val266: Int64,
   val267: Int64,
   val268: Int64,
   val269: Int64,
   val270: Int64,
   val271: Int64,
   val272: Int64,
   val273: Int64,
   val274: Int64,
   val275: Int64,
   val276: Int64,
   val277: Int64,
   val278: Int64,
   val279: Int64,
   val280: Int64,
   val281: Int64,
   val282: Int64,
   val283: Int64,
   val284: Int64,
   val285: Int64,
   val286: Int64,
   val287: Int64,
   val288: Int64,
   val289: Int64,
   val290: Int64,
   val291: Int64,
   val292: Int64,
   val293: Int64,
   val294: Int64,
   val295: Int64,
   val296: Int64,
   val297: Int64,
   val298: Int64,
   val299: Int64,
   val300: Int64,
   val301: Int64,
   val302: Int64,
   val303: Int64,
   val304: Int64,
   val305: Int64,
   val306: Int64,
   val307: Int64,
   val308: Int64,
   val309: Int64,
   val310: Int64,
   val311: Int64,
   val312: Int64,
   val313: Int64,
   val314: Int64,
   val315: Int64,
   val316: Int64,
   val317: Int64,
   val318: Int64,
   val319: Int64,
   val320: Int64,
   val321: Int64,
   val322: Int64,
   val323: Int64,
   val324: Int64,
   val325: Int64,
   val326: Int64,
   val327: Int64,
   val328: Int64,
   val329: Int64,
   val330: Int64,
   val331: Int64,
   val332: Int64,
   val333: Int64,
   val334: Int64,
   val335: Int64,
   val336: Int64,
   val337: Int64,
   val338: Int64,
   val339: Int64,
   val340: Int64,
   val341: Int64,
   val342: Int64,
   val343: Int64,
   val344: Int64,
   val345: Int64,
   val346: Int64,
   val347: Int64,
   val348: Int64,
   val349: Int64,
   val350: Int64,
   val351: Int64,
   val352: Int64,
   val353: Int64,
   val354: Int64,
   val355: Int64,
   val356: Int64,
   val357: Int64,
   val358: Int64,
   val359: Int64,
   val360: Int64,
   val361: Int64,
   val362: Int64,
   val363: Int64,
   val364: Int64,
   val365: Int64,
   val366: Int64,
   val367: Int64,
   val368: Int64,
   val369: Int64,
   val370: Int64,
   val371: Int64,
   val372: Int64,
   val373: Int64,
   val374: Int64,
   val375: Int64,
   val376: Int64,
   val377: Int64,
   val378: Int64,
   val379: Int64,
   val380: Int64,
   val381: Int64,
   val382: Int64,
   val383: Int64,
   val384: Int64,
   val385: Int64,
   val386: Int64,
   val387: Int64,
   val388: Int64,
   val389: Int64,
   val390: Int64,
   val391: Int64,
   val392: Int64,
   val393: Int64,
   val394: Int64,
   val395: Int64,
   val396: Int64,
   val397: Int64,
   val398: Int64,
   val399: Int64,
   val400: Int64,
   val401: Int64,
   val402: Int64,
   val403: Int64,
   val404: Int64,
   val405: Int64,
   val406: Int64,
   val407: Int64,
   val408: Int64,
   val409: Int64,
   val410: Int64,
   val411: Int64,
   val412: Int64,
   val413: Int64,
   val414: Int64,
   val415: Int64,
   val416: Int64,
   val417: Int64,
   val418: Int64,
   val419: Int64,
   val420: Int64,
   val421: Int64,
   val422: Int64,
   val423: Int64,
   val424: Int64,
   val425: Int64,
   val426: Int64,
   val427: Int64,
   val428: Int64,
   val429: Int64,
   val430: Int64,
   val431: Int64,
   val432: Int64,
   val433: Int64,
   val434: Int64,
   val435: Int64,
   val436: Int64,
   val437: Int64,
   val438: Int64,
   val439: Int64,
   val440: Int64,
   val441: Int64,
   val442: Int64,
   val443: Int64,
   val444: Int64,
   val445: Int64,
   val446: Int64,
   val447: Int64,
   val448: Int64,
   val449: Int64,
   val450: Int64,
   val451: Int64,
   val452: Int64,
   val453: Int64,
   val454: Int64,
   val455: Int64,
   val456: Int64,
   val457: Int64,
   val458: Int64,
   val459: Int64,
   val460: Int64,
   val461: Int64,
   val462: Int64,
   val463: Int64,
   val464: Int64,
   val465: Int64,
   val466: Int64,
   val467: Int64,
   val468: Int64,
   val469: Int64,
   val470: Int64,
   val471: Int64,
   val472: Int64,
   val473: Int64,
   val474: Int64,
   val475: Int64,
   val476: Int64,
   val477: Int64,
   val478: Int64,
   val479: Int64,
   val480: Int64,
   val481: Int64,
   val482: Int64,
   val483: Int64,
   val484: Int64,
   val485: Int64,
   val486: Int64,
   val487: Int64,
   val488: Int64,
   val489: Int64,
   val490: Int64,
   val491: Int64,
   val492: Int64,
   val493: Int64,
   val494: Int64,
   val495: Int64,
   val496: Int64,
   val497: Int64,
   val498: Int64,
   val499: Int64,
   val500: Int64,
   val501: Int64,
   val502: Int64,
   val503: Int64,
   val504: Int64,
   val505: Int64,
   val506: Int64,
   val507: Int64,
   val508: Int64,
   val509: Int64,
   val510: Int64,
   val511: Int64,
   val512: Int64,
}

impl LargeObject {
    static fn new(): LargeObject {
        LargeObject(
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
        )
    }
}