fn main() {
    let x = 1i64.unaryMinus();
    assert(x == -1i64);

    let x = 1i64.plus(2i64);
    assert(x == 3i64);

    let x = 1i64 + 2i64;
    assert(x == 3i64);

    let x = 5i64.minus(2i64);
    assert(x == 3i64);

    let x = 5i64 - 2i64;
    assert(x == 3i64);

    let x = 3i64.times(4i64);
    assert(x == 12i64);

    let x = 3i64 * 4i64;
    assert(x == 12i64);

    let x = 9i64.div(8i64);
    assert(x == 1i64);

    let x = 9i64 / 8i64;
    assert(x == 1i64);

    let x = 10i64.modulo(8i64);
    assert(x == 2i64);

    let x = 10i64 % 8i64;
    assert(x == 2i64);

    let x = 1i64.bitwiseOr(2i64);
    assert(x == 3i64);

    let x = 1i64 | 2i64;
    assert(x == 3i64);

    let x = 5i64.bitwiseAnd(6i64);
    assert(x == 4i64);

    let x = 5i64 & 6i64;
    assert(x == 4i64);

    let x = 1i64.bitwiseXor(3i64);
    assert(x == 2i64);

    let x = 1i64 ^ 3i64;
    assert(x == 2i64);

    let x = 1i64.not();
    assert(x == -2i64);

    let x = !1i64;
    assert(x == -2i64);

    let x = 3i64;
    assert(x.toInt32() == 3i32);

    assert(2i64 != 3i64);
    assert(5i64 == 5i64);
    assert(2i64 > 1i64);
    assert(2i64 >= 1i64);
    assert(3i64 < 4i64);
    assert(3i64 <= 4i64);
}