fn main() {
  let a = nested();
  std::forceCollect();

  assert(a.next.getOrPanic().next.getOrPanic().value == 3i32);
}

fn nested(): Foo {
  let x = Foo(value = 3i32, next = None[Foo]);
  let y = Foo(value = 2i32, next = Some[Foo](x));
  let z = Foo(value = 1i32, next = Some[Foo](y));

  return z;
}

class Foo { value: Int32, next: Option[Foo] }
