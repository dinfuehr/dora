enum Foo { A, B }

impl Foo {
    fun toString(): String {
        if self == Foo::A {
            "A"
        } else {
            "B"
        }
    }

    fun toInt32(): Int32 {
        if self == Foo::A {
            0I
        } else {
            1I
        }
    }
}

fun main() {
    assert("A" == asString(Foo::A));
    assert("B" == asString(Foo::B));

    assert(0I == asInt(Foo::A));
    assert(1I == asInt(Foo::B));
}

fun asString(foo: Foo): String {
    foo.toString()
}

fun asInt(foo: Foo): Int32 {
    foo.toInt32()
}
