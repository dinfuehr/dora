fun main() {
    let x = 1L.unaryPlus();
    assert(x == +1L);

    let x = 1L.unaryMinus();
    assert(x == -1L);

    let x = 1L.plus(2L);
    assert(x == 3L);

    let x = 1L + 2L;
    assert(x == 3L);

    let x = 5L.minus(2L);
    assert(x == 3L);

    let x = 5L - 2L;
    assert(x == 3L);

    let x = 3L.times(4L);
    assert(x == 12L);

    let x = 3L * 4L;
    assert(x == 12L);

    let x = 9L.div(8L);
    assert(x == 1L);

    let x = 9L / 8L;
    assert(x == 1L);

    let x = 10L.mod(8L);
    assert(x == 2L);

    let x = 10L % 8L;
    assert(x == 2L);

    let x = 1L.bitwiseOr(2L);
    assert(x == 3L);

    let x = 1L | 2L;
    assert(x == 3L);

    let x = 5L.bitwiseAnd(6L);
    assert(x == 4L);

    let x = 5L & 6L;
    assert(x == 4L);

    let x = 1L.bitwiseXor(3L);
    assert(x == 2L);

    let x = 1L ^ 3L;
    assert(x == 2L);

    let x = 1L.not();
    assert(x == -2L);

    let x = !1L;
    assert(x == -2L);

    let x = 3L;
    assert(x.toInt32() == 3I);

    assert(2L != 3L);
    assert(5L == 5L);
    assert(2L > 1L);
    assert(2L >= 1L);
    assert(3L < 4L);
    assert(3L <= 4L);
}