fun main() {
  assert(foo_bool() == true);
  assert(foo_byte() == 3Y);
  assert(foo_char() == '3');
  assert(foo_int32() == 3);
  assert(foo_int64() == 3L);
  assert(foo_float() == 3F);
  assert(foo_double() == 3D);
  assert(foo_string() == "3");
}

@cannon fun foo_bool() -> Bool {
  return bar_bool();
}
@cannon fun bar_bool() -> Bool {
  return true;
}

@cannon fun foo_byte() -> UInt8 {
  return bar_byte();
}
@cannon fun bar_byte() -> UInt8 {
  return 3Y;
}

@cannon fun foo_char() -> Char {
  return bar_char();
}
@cannon fun bar_char() -> Char {
  return '3';
}

@cannon fun foo_int32() -> Int32 {
  return bar_int32();
}
@cannon fun bar_int32() -> Int32 {
  return 3;
}

@cannon fun foo_int64() -> Int64 {
  return bar_int64();
}

@cannon fun bar_int64() -> Int64 {
  return 3L;
}

@cannon fun foo_float() -> Float32 {
  return bar_float();
}

@cannon fun bar_float() -> Float32 {
  return 3F;
}

@cannon fun foo_double() -> Float64 {
  return bar_double();
}

@cannon fun bar_double() -> Float64 {
  return 3D;
}

@cannon fun foo_string() -> String {
  return bar_string();
}

@cannon fun bar_string() -> String {
  return "3";
}