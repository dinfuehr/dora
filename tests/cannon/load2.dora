var glob_bool: Bool;
var glob_char: Char;
var glob_byte: UInt8;
var glob_int: Int32;
var glob_long: Int64;
var glob_float: Float32;
var glob_double: Float64;
var glob_string: String;
var glob_obj: Foo;

fun main() {
    init_globs();
    
    assert(loadGlobalBool() == true);
    assert(loadGlobalChar() == '5');
    assert(loadGlobalByte() == 5Y);
    assert(loadGlobalInt32() == 5);
    assert(loadGlobalInt64() == 5L);
    assert(loadGlobalFloat32() == 5F);
    assert(loadGlobalFloat64() == 5D);
    assert(loadGlobalString() == "5");

    assert(loadGlobalPtr() === glob_obj);
}

fun init_globs() {
    glob_bool = true;
    glob_char = '5';
    glob_byte = 5Y;
    glob_int = 5;
    glob_long = 5L;
    glob_float = 5F;
    glob_double = 5D;
    glob_string = "5";
    glob_obj = Foo();  
}

@cannon fun loadGlobalBool(): Bool {
    return glob_bool;
}
@cannon fun loadGlobalByte(): UInt8 {
    return glob_byte;
}
@cannon fun loadGlobalChar(): Char {
    return glob_char;
}
@cannon fun loadGlobalInt32(): Int32 {
    return glob_int;
}
@cannon fun loadGlobalInt64(): Int64 {
    return glob_long;
}
@cannon fun loadGlobalFloat32(): Float32 {
    return glob_float;
}
@cannon fun loadGlobalFloat64(): Float64 {
    return glob_double;
}
@cannon fun loadGlobalString(): String {
    return glob_string;
}
@cannon fun loadGlobalPtr(): Foo {
    return glob_obj;
}

class Foo()
