fn main() {
  let x = Int32::minValue().toStringBinary();
  assert(x == "10000000000000000000000000000000");

  let x = Int32::maxValue().toStringBinary();
  assert(x == "1111111111111111111111111111111");

  let x = 0i32.toStringBinary();
  assert(x == "0");

  let x = 12i32.toStringBinary();
  assert(x == "1100");

  let x = 67i32.toStringBinary();
  assert(x == "1000011");

  let x = 129i32.toStringBinary();
  assert(x == "10000001");

  let x = (-1i32).toStringBinary();
  assert(x == "11111111111111111111111111111111");

  let x = (-129i32).toStringBinary();
  assert(x == "11111111111111111111111101111111");


  let x = Int32::minValue().toStringHex();
  assert(x == "80000000");

  let x = Int32::maxValue().toStringHex();
  assert(x == "7FFFFFFF");

  let x = 0i32.toStringHex();
  assert(x == "0");

  let x = 12i32.toStringHex();
  assert(x == "C");

  let x = 67i32.toStringHex();
  assert(x == "43");

  let x = 129i32.toStringHex();
  assert(x == "81");

  let x = (-1i32).toStringHex();
  assert(x == "FFFFFFFF");

  let x = (-129i32).toStringHex();
  assert(x == "FFFFFF7F");
}
