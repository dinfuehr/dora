use std::collections::VecIter;

use package::assembler::RegSet;
use package::graph::Inst;

pub mod arm64;
pub mod x64;

pub trait CodeGen {
    fn allocatableRegisters(): RegSet;
    fn prolog();
    fn setLocationConstraints(inst: Inst);
    fn emit(inst: Inst);
    fn epilog();
    fn finalize(): CodeDescriptor;
}

pub class CodeDescriptor {
    pub code: Array[UInt8],
    pub comments: CommentTable,
}

pub class CommentTable {
    entries: Vec[(Int32, String)],
}

impl CommentTable {
    pub static fn new(): CommentTable {
        CommentTable(
            Vec[(Int32, String)]::new(),
        )
    }

    pub fn insert(offset: Int32, comment: String) {
        self.entries.push((offset, comment));
    }

    pub fn size(): Int64 {
        self.entries.size()
    }

    pub fn makeIterator(): VecIter[(Int32, String)] {
        self.entries.makeIterator()
    }
}