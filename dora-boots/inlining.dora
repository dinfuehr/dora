use package::compilation::CompilationInfo;
use package::graph::{Graph, Op};
use package::graph_builder;
use package::interface as iface;

pub fn performInlining(ci: CompilationInfo, graph: Graph) {
    for block in graph.insertionOrderIterator() {
        for inst in block.instructionsIterator() {
            let op = inst.op();

            if op == Op::InvokeStatic {
                let fctInfo = inst.getFunctionInfo();
                let fctId = fctInfo.fct_id;

                if iface::hasFunctionInlineAnnotation(fctId) {
                    let inlined_function_id = ci.addInlinedFunction(fctId, fctInfo.type_params, inst.getInlinedLocation());
                    let data = iface::getFunctionDataForInlining(fctId);
                    // graph_builder::addToGraph(graph, inlined_function_id, data.bc, fctInfo.type_params, data.returnType, block);

                    block.splitAfter(inst);
                    return;
                }
            }
        }
    }
}
