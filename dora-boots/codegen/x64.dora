use package::assembler::x64::AssemblerX64;
use package::assembler::x64::RBP;
use package::assembler::x64::RSP;
use package::interface::CompilationInfo;
use package::interface::Architecture;

pub class CodeGenX64 {
    info: CompilationInfo,
    asm: AssemblerX64,
}

impl CodeGenX64 {
    pub static fn new(info: CompilationInfo): CodeGenX64 {
        CodeGenX64(info, AssemblerX64::new())
    }

    pub fn prolog() {
        self.asm.pushq_r(RBP);
        self.asm.movq_rr(RBP, RSP);
    }

    pub fn epilog() {
        self.asm.movq_rr(RSP, RBP);
        self.asm.popq_r(RBP);
        self.asm.retq();
    }

    pub fn generate(): Array[UInt8] {
        assert(self.info.arch == Architecture::X64);
        self.prolog();
        self.epilog();
        self.asm.finalize()
    }
}
